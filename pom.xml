<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.openstatic</groupId>
  <artifactId>json-roller</artifactId>
  <version>1.2</version>
  <packaging>jar</packaging>
  <name>JSON Roller</name>
  <url>http://openstatic.org/json-roller/</url>
  <properties>
    <mainClass>org.openstatic.JSONRoller</mainClass>
    <maven.compiler.source>15</maven.compiler.source>
    <maven.compiler.target>15</maven.compiler.target>
    <imageName>json-roller</imageName>
    <graalvm.version>21.2.0</graalvm.version>
  </properties>
  <repositories>
    <repository>
      <id>local.repo</id>
      <name>local-repo</name>
      <url>file:/home/xitiomet/.m2/repository/</url>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>20160810</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/commons-cli/commons-cli -->
    <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>1.8</version>
    </dependency>
    <dependency>
        <groupId>org.graalvm.sdk</groupId>
        <artifactId>graal-sdk</artifactId>
        <version>${graalvm.version}</version>
        <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>5.3</version>
    </dependency>
  </dependencies>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <aggregate>true</aggregate>
          <quiet>true</quiet>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
  <build>
    <resources>
        <resource>
          <directory>src/main/resources/</directory>
          <includes>
            <include>*.png</include>
          </includes>
      </resource>
    </resources>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>2.4.3</version>
            <configuration>
              <mainClass>${mainClass}</mainClass>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${mainClass}</mainClass>
                </transformer>
              </transformers>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
              </execution>
            </executions>
        </plugin>
        <plugin>
            <groupId>org.graalvm.nativeimage</groupId>
            <artifactId>native-image-maven-plugin</artifactId>
            <version>${graalvm.version}</version>
            <executions>
                <execution>
                    <goals>
                        <goal>native-image</goal>
                    </goals>
                    <phase>package</phase>
                </execution>
            </executions>
            <configuration>
                <skip>false</skip>
                <imageName>${imageName}</imageName>
                <mainClass>${mainClass}</mainClass>
                <buildArgs>
                    --no-server
                    --no-fallback
                    --enable-https
                    --enable-http
                </buildArgs>
            </configuration>
       </plugin>
       <plugin>
            <artifactId>jdeb</artifactId>
            <groupId>org.vafer</groupId>
            <version>1.8</version>
            <configuration>
              <skip>false</skip>
            </configuration>
            <executions>
                <!-- build native image debian package -->
                <execution>
                    <id>native-debian-package</id>
                    <phase>package</phase>
                    <goals>
                        <goal>jdeb</goal>
                    </goals>
                    <configuration>
                        <verbose>true</verbose>
                        <snapshotExpand>true</snapshotExpand>
                        <!-- expand "SNAPSHOT" to what is in the "USER" env variable -->
                        <snapshotEnv>USER</snapshotEnv>
                        <controlDir>${basedir}/src/deb/control</controlDir>
                        <deb>${project.build.directory}/${project.artifactId}-${project.version}-native.deb</deb>
                        <dataSet>
                            <data>
                              <src>${project.build.directory}/${imageName}</src>
                              <type>file</type>
                              <mapper>
                                <type>perm</type>
                                <prefix>/usr/bin</prefix>
                                <user>loader</user>
                                <group>loader</group>
                                <filemode>755</filemode>
                              </mapper>
                            </data>
                        </dataSet>
                    </configuration>
                </execution>
            </executions>
       </plugin>
       <plugin>
            <groupId>com.akathist.maven.plugins.launch4j</groupId>
            <artifactId>launch4j-maven-plugin</artifactId>
            <version>2.0.1</version>
            <executions>
                <execution>
                    <id>l4j-gui</id>
                    <phase>package</phase>
                    <goals>
                        <goal>launch4j</goal>
                    </goals>
                    <configuration>
                        <headerType>console</headerType>
                        <outfile>target/json-roller.exe</outfile>
                        <jar>target/${project.artifactId}-${project.version}.jar</jar>
                        <!-- if <dontWrapJar>true</dontWrapJar> change to this conf <jar>${project.artifactId}-${project.version}.jar</jar> -->
                        <dontWrapJar>false</dontWrapJar>
                        <errTitle>Error in launch4j plugin</errTitle>
                        <classPath>
                            <mainClass>${mainClass}</mainClass>
                        </classPath>
                        <icon>src/main/resources/jsonroller.ico</icon>
                        <jre>
                            <path>%JAVA_HOME%;%PATH%;jre</path>
                            <minVersion>1.8.0</minVersion>
                            <initialHeapSize>512</initialHeapSize>
                            <maxHeapSize>1024</maxHeapSize>
                            <opts>
                              <opt>-Djava.awt.headless=true</opt>
                            </opts>
                        </jre>
                        <versionInfo>
                            <fileVersion>1.0.0.0</fileVersion>
                            <txtFileVersion>1.0.0.0</txtFileVersion>
                            <fileDescription>json-roller</fileDescription>
                            <copyright>Copyright (c) 2019</copyright>
                            <companyName>openstatic.org</companyName>
                            <productVersion>1.0.0.0</productVersion>
                            <txtProductVersion>${project.version}</txtProductVersion>
                            <productName>JSONRoller</productName>
                            <internalName>JSONRoller</internalName>
                            <originalFilename>json-roller.exe</originalFilename>
                        </versionInfo>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <plugin>
            <groupId>org.digitalmediaserver</groupId>
            <artifactId>nsis-maven-plugin</artifactId>
            <version>1.0.2</version>
            <configuration>
                <makensisExecutable>C:\Program Files (x86)\NSIS\makensis.exe</makensisExecutable>
                <makensisExecutableLinux>/usr/bin/makensis</makensisExecutableLinux>
                <makensisExecutableMacOS></makensisExecutableMacOS>
                <compression>lzma</compression>
                <compressionIsFinal>true</compressionIsFinal>
                <compressionDictSize>64</compressionDictSize>
                <defines>
                    <PROJECT_NAME_SHORT>json-roller</PROJECT_NAME_SHORT>
                    <PROJECT_NAME_CAMEL>${project.name.camel}</PROJECT_NAME_CAMEL>
                </defines>
            </configuration>
            <executions>
                <execution>
                    <id>build-windows-installer</id>
                    <configuration>
                        <scriptFile>${basedir}/src/nsis/json-roller.nsi</scriptFile>
                        <outputFile>json-roller-setup.exe</outputFile>
                    </configuration>
                    <goals>
                        <goal>generate-headerfile</goal>
                        <goal>make</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.0.1</version>
            <configuration>
            </configuration>
       </plugin>
    </plugins>
  </build>
</project>
